sim3[,8:9] <- sim3[,8:9]/colmax[3]
sim3[,10:11] <- sim3[,10:11]/colmax[4]
sim <- sim2
#sim 2 table
m.ave <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(4,6,8,10)]))))
m.ave <- format(round(m.ave,3),nsmall=3)
m.sd <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(5,7,9,11)]))))
m.sd <- format(round(m.sd,3),nsmall=3)
m.data <- paste0(m.ave, '   (',m.sd,')')
length(m.data)
36*5
180/3
#sim 2 table
m.ave <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(4,6,8,10)]))))
m.ave <- format(round(m.ave,3),nsmall=3)
m.ave
#sim 2 table
m.ave <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(4,6,8,10)]))))
m.ave
##### Load in Data
sim1 <- read_csv("scenario1full.csv")
sim1 <- sim1[,2:12]
# colmax <- as.matrix(apply(sim1[,c(4,6,8,10)],2,max))/100
# sim1[,4:5] <- sim1[,4:5]/colmax[1]
# sim1[,6:7] <- sim1[,6:7]/colmax[2]
# sim1[,8:9] <- sim1[,8:9]/colmax[3]
# sim1[,10:11] <- sim1[,10:11]/colmax[4]
sim2 <- read_csv("scenario2full.csv")
sim2 <- sim2[,2:13]
# colmax <- as.matrix(apply(sim2[,c(5,7,9,11)],2,max))/100
# sim2[,5:6] <- sim2[,5:6]/colmax[1]
# sim2[,7:8] <- sim2[,7:8]/colmax[2]
# sim2[,9:10] <- sim2[,9:10]/colmax[3]
# sim2[,11:12] <- sim2[,11:12]/colmax[4]
sim2 <- sim2[,-1]
sim3 <- read_csv("scenario3full.csv")
sim3 <- sim3[,2:12]
# colmax <- as.matrix(apply(sim3[,c(4,6,8,10)],2,max))/100
# sim3[,4:5] <- sim3[,4:5]/colmax[1]
# sim3[,6:7] <- sim3[,6:7]/colmax[2]
# sim3[,8:9] <- sim3[,8:9]/colmax[3]
# sim3[,10:11] <- sim3[,10:11]/colmax[4]
sim <- sim1
#sim 1 table
m.ave <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(4,6,8,10)]))))
View9M.ave
View(m.ave)
rowmax <- apply(m.ave,1,max)
dim(rowmax)
length(rowmax)
dim(m.ave)
m.ave <- m.ave/rowmax
#sim 1 table
m.ave <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(4,6,8,10)]))))
rowmax <- apply(m.ave,1,max)/100
m.ave <- m.ave/rowmax
m.sd <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(5,7,9,11)]))))
m.sd <- m.sd/rowmax
m.sd <- format(round(m.sd,2),nsmall=2)
View(m.sd)
min(m.sd)
m.sd <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(5,7,9,11)]))))
min(m.sd)
m.sd <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(5,7,9,11)]))))
m.sd <- m.sd/rowmax
min(m.sd)
max(m.sd)
min(m.ave)
#sim 1 table
m.ave <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(4,6,8,10)]))))
rowmax <- apply(m.ave,1,max)/100
m.ave <- m.ave/rowmax
min(m.ave)
m.df <- data.frame(rep(c(0.0,0.1,0.5,0.9),each=4),
rep(c("MSE","MAE","MSPE","MAPE"),4),m.data)
m.df
dim(m.df)
sim <- sim2
#sim 2 table
m.ave <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(4,6,8,10)]))))
rowmax <- apply(m.ave,1,max)/100
m.ave <- m.ave/rowmax
m.ave <- format(round(m.ave,2),nsmall=2)
m.sd <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(5,7,9,11)]))))
m.sd <- m.sd/rowmax
m.sd <- format(round(m.sd,2),nsmall=2)
m.data <- paste0(m.ave, '   (',m.sd,')')
m.data <- matrix(m.data,ncol=5)
m.df <- data.frame(rep(c(0.0,0.1,0.5,0.9),each=4),
rep(c("MSE","MAE","MSPE","MAPE"),4),m.data)
dim(m.df)
sim <- sim2
#sim 2 table
m.ave <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(4,6,8,10)]))))
m.ave <- m.ave/rowmax
m.ave <- format(round(m.ave,2),nsmall=2)
m.sd <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(5,7,9,11)]))))
m.sd <- m.sd/rowmax
m.sd <- format(round(m.sd,2),nsmall=2)
m.data <- paste0(m.ave, '   (',m.sd,')')
m.data <- matrix(m.data,ncol=5)
m.df <- data.frame(rep(c(0.0,0.1,0.5,0.9),each=4),
rep(c("MSE","MAE","MSPE","MAPE"),4),m.data)
names(m.df) <- c('$\\rho$','','MLR',
'Lasso',
'Ridge',
'EN',
'Entropy')
colnames <- c('','MLR',
'Lasso',
'Ridge',
'Elastic Net',
'Entropy')
kable(m.df[,-1],"html", col.names = colnames, escape = F,
booktabs = T, align = 'l',
linesep=c("","","\\addlinespace\\addlinespace")) %>%
kable_styling(full_width = F) %>%
pack_rows("$J = 25$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 1, 12,latex_gap_space = "0em") %>%
pack_rows("$J = 50$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 13, 24,latex_gap_space = "0em") %>%
pack_rows("$J = 100$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 25, 36,latex_gap_space = "0em") %>%
collapse_rows(columns = 1, latex_hline = 'none')
kable(m.df[,-1],"html", col.names = colnames, escape = F,
booktabs = T, align = 'l',
linesep=c("","","\\addlinespace\\addlinespace")) %>%
kable_styling(full_width = F) %>%
pack_rows("$\\\\rho = 0$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 1, 4,latex_gap_space = "0em") %>%
pack_rows("$\\\\rho = 0.1$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 5, 8,latex_gap_space = "0em") %>%
pack_rows("$\\\\rho = 0.5$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 9, 12,latex_gap_space = "0em") %>%
pack_rows("$\\\\rho = 0.9$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 13, 16,latex_gap_space = "0em") %>%
collapse_rows(columns = 1, latex_hline = 'none')
sim <- sim2
#sim 2 table
m.ave <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(4,6,8,10)]))))
rowmax <- apply(m.ave,1,max)/100
m.ave <- m.ave/rowmax
m.ave <- format(round(m.ave,2),nsmall=2)
m.sd <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(5,7,9,11)]))))
m.sd <- m.sd/rowmax
m.sd <- format(round(m.sd,2),nsmall=2)
m.data <- paste0(m.ave, '   (',m.sd,')')
m.data <- matrix(m.data,ncol=5)
m.df <- data.frame(rep(c(0.0,0.1,0.5,0.9),each=4),
rep(c("MSE","MAE","MSPE","MAPE"),4),m.data)
names(m.df) <- c('$\\rho$','','MLR',
'Lasso',
'Ridge',
'EN',
'Entropy')
colnames <- c('','\\textbf{MLR}',
'\\textbf{Lasso}',
'\\textbf{Ridge}',
'\\textbf{Elastic Net}',
'\\textbf{Entropy}')
kable(m.df[,-1],"latex", col.names = colnames, escape = F,
booktabs = T, align = 'l',
linesep=c("","","","\\addlinespace\\addlinespace")) %>%
kable_styling(full_width = F) %>%
pack_rows("$\\\\rho = 0$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 1, 4,latex_gap_space = "0em") %>%
pack_rows("$\\\\rho = 0.1$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 5, 8,latex_gap_space = "0em") %>%
pack_rows("$\\\\rho = 0.5$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 9, 12,latex_gap_space = "0em") %>%
pack_rows("$\\\\rho = 0.9$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 13, 16,latex_gap_space = "0em") %>%
collapse_rows(columns = 1, latex_hline = 'none')
?kable
sim <- sim1
#sim 1 table
m.ave <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(4,6,8,10)]))))
rowmax <- apply(m.ave,1,max)/100
m.ave <- m.ave/rowmax
m.ave <- format(round(m.ave,2),nsmall=2)
m.sd <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(5,7,9,11)]))))
m.sd <- m.sd/rowmax
m.sd <- format(round(m.sd,2),nsmall=2)
m.data <- paste0(m.ave, '   (',m.sd,')')
m.data <- matrix(m.data,ncol=5)
m.df <- data.frame(rep(c(25,50,100),each=12),
rep(rep(c('50','100','200'),each=4),3),
rep(c("MSE","MAE","MSPE","MAPE"),9),m.data)
names(m.df) <- c('J','m','','MLR',
'Lasso',
'Ridge',
'EN',
'Entropy')
colnames <- c('$m$','','\\textbf{MLR}',
'\\textbf{Lasso}',
'\\textbf{Ridge}',
'\\textbf{Elastic Net}',
'\\textbf{Entropy}')
knitr::kable(m.df[,-1],"latex", col.names = colnames, escape = F,
booktabs = T, align = 'l',
linesep=c("","","","\\addlinespace\\addlinespace")) %>%
kable_styling(full_width = F) %>%
pack_rows("$J = 25$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 1, 12,latex_gap_space = "0em") %>%
pack_rows("$J = 50$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 13, 24,latex_gap_space = "0em") %>%
pack_rows("$J = 100$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 25, 36,latex_gap_space = "0em") %>%
collapse_rows(columns = 1, latex_hline = 'none')
sim <- sim1
#sim 1 table
m.ave <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(4,6,8,10)]))))
rowmax <- apply(m.ave,1,max)/100
m.ave <- m.ave/rowmax
m.ave <- format(round(m.ave,2),nsmall=2)
m.sd <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(5,7,9,11)]))))
m.sd <- m.sd/rowmax
m.sd <- format(round(m.sd,2),nsmall=2)
m.data <- paste0(m.ave, '   (',m.sd,')')
m.data <- matrix(m.data,ncol=5)
m.df <- data.frame(rep(c(25,50,100),each=12),
rep(rep(c('50','100','200'),each=4),3),
rep(c("MSE","MAE","MSPE","MAPE"),9),m.data)
names(m.df) <- c('J','m','','MLR',
'Lasso',
'Ridge',
'EN',
'Entropy')
colnames <- c('$m$','','\\textbf{MLR}',
'\\textbf{Lasso}',
'\\textbf{Ridge}',
'\\textbf{Elastic Net}',
'\\textbf{Entropy}')
kableExtra::kable(m.df[,-1],"latex", col.names = colnames, escape = F,
booktabs = T, align = 'l',
linesep=c("","","","\\addlinespace\\addlinespace")) %>%
kable_styling(full_width = F) %>%
pack_rows("$J = 25$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 1, 12,latex_gap_space = "0em") %>%
pack_rows("$J = 50$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 13, 24,latex_gap_space = "0em") %>%
pack_rows("$J = 100$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 25, 36,latex_gap_space = "0em") %>%
collapse_rows(columns = 1, latex_hline = 'none')
test <- kable(m.df[,-1],"latex", col.names = colnames, escape = F,
booktabs = T, align = 'l',
linesep=c("","","","\\addlinespace\\addlinespace")) %>%
kable_styling(full_width = F) %>%
pack_rows("$J = 25$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 1, 12,latex_gap_space = "0em") %>%
pack_rows("$J = 50$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 13, 24,latex_gap_space = "0em") %>%
pack_rows("$J = 100$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 25, 36,latex_gap_space = "0em") %>%
collapse_rows(columns = 1, latex_hline = 'none')
test
##### Load in Data
sim1 <- read_csv("scenario1full.csv")
sim1 <- sim1[,2:12]
# colmax <- as.matrix(apply(sim1[,c(4,6,8,10)],2,max))/100
# sim1[,4:5] <- sim1[,4:5]/colmax[1]
# sim1[,6:7] <- sim1[,6:7]/colmax[2]
# sim1[,8:9] <- sim1[,8:9]/colmax[3]
# sim1[,10:11] <- sim1[,10:11]/colmax[4]
sim2 <- read_csv("scenario2full.csv")
sim2 <- sim2[,2:13]
# colmax <- as.matrix(apply(sim2[,c(5,7,9,11)],2,max))/100
# sim2[,5:6] <- sim2[,5:6]/colmax[1]
# sim2[,7:8] <- sim2[,7:8]/colmax[2]
# sim2[,9:10] <- sim2[,9:10]/colmax[3]
# sim2[,11:12] <- sim2[,11:12]/colmax[4]
sim2 <- sim2[,-1]
sim3 <- read_csv("scenario3full.csv")
sim3 <- sim3[,2:12]
# colmax <- as.matrix(apply(sim3[,c(4,6,8,10)],2,max))/100
# sim3[,4:5] <- sim3[,4:5]/colmax[1]
# sim3[,6:7] <- sim3[,6:7]/colmax[2]
# sim3[,8:9] <- sim3[,8:9]/colmax[3]
# sim3[,10:11] <- sim3[,10:11]/colmax[4]
sim <- sim1
#sim 1 table
m.ave <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(4,6,8,10)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(4,6,8,10)]))))
rowmax <- apply(m.ave,1,max)/100
m.ave <- m.ave/rowmax
m.ave <- format(round(m.ave,2),nsmall=2)
m.sd <- cbind(as.vector(t(as.matrix(sim[which(sim$method=="MLR"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Ridge"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="EN"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Lasso"),c(5,7,9,11)]))),
as.vector(t(as.matrix(sim[which(sim$method=="Entropy"),c(5,7,9,11)]))))
m.sd <- m.sd/rowmax
m.sd <- format(round(m.sd,2),nsmall=2)
m.data <- paste0(m.ave, '   (',m.sd,')')
m.data <- matrix(m.data,ncol=5)
m.df <- data.frame(rep(c(25,50,100),each=12),
rep(rep(c('50','100','200'),each=4),3),
rep(c("MSE","MAE","MSPE","MAPE"),9),m.data)
names(m.df) <- c('J','m','','MLR',
'Lasso',
'Ridge',
'EN',
'Entropy')
colnames <- c('$m$','','\\textbf{MLR}',
'\\textbf{Lasso}',
'\\textbf{Ridge}',
'\\textbf{Elastic Net}',
'\\textbf{Entropy}')
mytable <- kable(m.df[,-1],"latex", col.names = colnames, escape = F,
booktabs = T, align = 'l',
linesep=c("","","","\\addlinespace\\addlinespace")) %>%
kable_styling(full_width = F) %>%
pack_rows("$J = 25$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 1, 12,latex_gap_space = "0em") %>%
pack_rows("$J = 50$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 13, 24,latex_gap_space = "0em") %>%
pack_rows("$J = 100$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 25, 36,latex_gap_space = "0em") %>%
collapse_rows(columns = 1, latex_hline = 'none')
write.table(mytable, file = "table1.txt", sep = "")
write.csv(mytable, file = "table1.txt", sep = "")
mytable
mytable <- kable(m.df[,-1],"latex", col.names = colnames, escape = F,
booktabs = T, align = 'l',
linesep=c("","","","\\addlinespace\\addlinespace")) %>%
kable_styling(full_width = F) %>%
pack_rows("$J = 25$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 1, 12,latex_gap_space = "0em") %>%
pack_rows("$J = 50$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 13, 24,latex_gap_space = "0em") %>%
pack_rows("$J = 100$",latex_align='c',indent=F,
hline_before = T, hline_after = T,
escape = F, 25, 36,latex_gap_space = "0em") %>%
collapse_rows(columns = 1, latex_hline = 'none')
mytable
mytable
mytable
mspe
load("~/Documents/Classes/Winter 2021/stat571project/GvHD data/mspe.RData")
load("~/Documents/Classes/Winter 2021/stat571project/GvHD data/mape.RData")
mspe
mspe <- c(mean(mspe),sd(mspe))
mape <- c(mean(mape),sd(mape))
### gvhd results for entropic MLR
load("~/Documents/Classes/Winter 2021/stat571project/GvHD data/mspe.RData")
load("~/Documents/Classes/Winter 2021/stat571project/GvHD data/mape.RData")
mspe_gvhd <- c(mean(mspe),sd(mspe))
mape_gvhd <- c(mean(mape),sd(mape))
mspe_gvhd
mape_gvhd
m.df <- data.frame(c("NA","NA"),c("NA","NA"),c("NA","NA"),c("NA","NA"),
c("6064933 (5923124)","462 (208)"))
m.df
View(m.df)
names(m.df) <- c('MLR',
'Lasso',
'Ridge',
'EN',
'Entropy')
colnames <- c('','\\textbf{MLR}',
'\\textbf{Lasso}',
'\\textbf{Ridge}',
'\\textbf{Elastic Net}',
'\\textbf{Entropy}')
kable(m.df[,-1],"latex", col.names = colnames, escape = F,
booktabs = T, align = 'l',
linesep=c("","","","\\addlinespace\\addlinespace"))
m.df <- data.frame(c("MSPE","MAPE"),c("NA","NA"),c("NA","NA"),c("NA","NA"),c("NA","NA"),
c("6064933 (5923124)","462 (208)"))
names(m.df) <- c('MLR',
'Lasso',
'Ridge',
'EN',
'Entropy')
colnames <- c('','\\textbf{MLR}',
'\\textbf{Lasso}',
'\\textbf{Ridge}',
'\\textbf{Elastic Net}',
'\\textbf{Entropy}')
m.df <- data.frame(c("MSPE","MAPE"),c("NA","NA"),c("NA","NA"),c("NA","NA"),c("NA","NA"),
c("6064933 (5923124)","462 (208)"))
colnames <- c('','\\textbf{MLR}',
'\\textbf{Lasso}',
'\\textbf{Ridge}',
'\\textbf{Elastic Net}',
'\\textbf{Entropy}')
m.df <- data.frame(c("MSPE","MAPE"),c("NA","NA"),c("NA","NA"),c("NA","NA"),c("NA","NA"),
c("6064933 (5923124)","462 (208)"))
names(m.df) <- c('','MLR',
'Lasso',
'Ridge',
'EN',
'Entropy')
colnames <- c('','\\textbf{MLR}',
'\\textbf{Lasso}',
'\\textbf{Ridge}',
'\\textbf{Elastic Net}',
'\\textbf{Entropy}')
kable(m.df[,-1],"latex", col.names = colnames, escape = F,
booktabs = T, align = 'l',
linesep=c("","","","\\addlinespace\\addlinespace"))
kable(m.df[,],"latex", col.names = colnames, escape = F,
booktabs = T, align = 'l',
linesep=c("","","","\\addlinespace\\addlinespace"))
